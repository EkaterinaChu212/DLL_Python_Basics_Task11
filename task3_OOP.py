# -*- coding: utf-8 -*-
"""Task3_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FQA63qg4le_UKWkQhaHM7ZmHl6oDUjsw
"""



import math

stopwords = {"и", "в", "на", "с", "по", "из", "у", "а", "то", "не", "но"}

class TextVectorizer:
    def __init__(self, documents):
        self.documents = []

        for doc in documents:
            words = doc.lower().split()
            self.documents.append(words)

    def get_tf(self, word, doc_index):
        word = word.lower()
        doc = self.documents[doc_index]

        count_word = doc.count(word)
        total_words = len(doc)

        if total_words == 0:
            return 0
        return count_word / total_words

    def get_idf(self, word):
        word = word.lower()
        if word in stopwords:
            return 0

        docs_with_word = 0
        for doc in self.documents:
            if word in doc:
                docs_with_word += 1

        if docs_with_word == 0:
            return 0

        return math.log(len(self.documents) / docs_with_word)

    def get_tf_idf(self, word, doc_index, ignore_stopwords=True):
        word = word.lower()

        if ignore_stopwords and word in stopwords:
            return 0

        tf = self.get_tf(word, doc_index)
        idf = self.get_idf(word)

        return tf * idf

docs = [
    "Я люблю программирование и изучать новое",
    "Программирование это интересно и полезно",
    "Изучать Python особенно приятно"
]

vectorizer = TextVectorizer(docs)

word = "программирование"
doc_index = 0

print(f"TF('{word}', doc {doc_index}):", vectorizer.get_tf(word, doc_index))
print(f"IDF('{word}'):", vectorizer.get_idf(word))
print(f"TF-IDF('{word}', doc {doc_index}):", vectorizer.get_tf_idf(word, doc_index))
print(f"TF-IDF('и', doc {doc_index}, ignore_stopwords=False):",
      vectorizer.get_tf_idf("и", doc_index, ignore_stopwords=False))
print(f"TF-IDF('и', doc {doc_index}, ignore_stopwords=True):",
      vectorizer.get_tf_idf("и", doc_index, ignore_stopwords=True))